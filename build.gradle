buildscript {
  ext {
    startClass = 'com.github.poeatlas.cli.Main'
  }
}
plugins {
  id 'java'
  id 'idea'
  id 'eclipse'
  id 'checkstyle'
  id 'pmd'
  id 'findbugs'
  id 'net.researchgate.release' version '2.6.0'
  id 'nebula.lint' version '7.4.0'
}
repositories {
  mavenCentral()
  jcenter()
}

jar {
  baseName = 'poeatlas-cli'
  version = "${version}"

  manifest {
    attributes "Main-Class": "${startClass}"
  }

  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  gradleLint.ignore {
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.16'
  }

  // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

  // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
  testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.11'
}

eclipse {
  classpath {
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
  }
}

checkstyle {
  toolVersion = '7.8.1'
  showViolations = true
}

pmd {
  ruleSets = [] // This overwrites the rules that are being added
  ruleSetFiles = rootProject.files("config/pmd/pmd.xml")
}

tasks.withType(Checkstyle) {
  reports {
    html.destination rootProject.file("build/reports/checkstyle.html")
  }
}

tasks.withType(FindBugs) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

tasks.withType(Checkstyle).each { checkstyleTask ->
  checkstyleTask.doLast {
    reports.all { report ->
      def outputFile = report.destination
      if (outputFile.exists() && outputFile.text.contains("<error ")) {
        throw new GradleException("There were checkstyle warnings! For more info check file://${reports.html.destination}")
      }
    }
  }
}

gradleLint.rules = ['all-dependency']